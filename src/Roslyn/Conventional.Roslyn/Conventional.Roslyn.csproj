<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>net6.0</TargetFramework>
        <PackageId>Best.Conventional.Roslyn</PackageId>
        <Title>Best.Conventional.Roslyn</Title>
        <Authors>Andrew Best</Authors>
        <Owners>Andrew Best</Owners>
        <PackageProjectUrl>https://github.com/andrewabest/Conventional</PackageProjectUrl>
        <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
        <Description>Rolsyn analysers that can be used both in your IDE and in your Best.Conventional convention specifications for enforcing type conventions in your codebase</Description>
        <PackageIconUrl>https://raw.github.com/andrewabest/Conventional/master/duck.png</PackageIconUrl>
        <Tags>Convention Testing, Roslyn, Analyzer</Tags>
        <Copyright>Copyright Â© 2020, Andrew Best</Copyright>
        <Version>0.0.0.0</Version>
        <PackageVersion>0.0.0.0</PackageVersion>
    </PropertyGroup>

    <ItemGroup>
      <PackageReference Include="Best.Conventional" Version="11.0.0" />
      <PackageReference Include="Microsoft.Build.Locator" Version="1.6.10" />
      <PackageReference Include="Microsoft.CodeAnalysis.CSharp.Workspaces" Version="4.7.0" />
      <PackageReference Include="Microsoft.CodeAnalysis.Workspaces.MSBuild" Version="4.7.0" />
    </ItemGroup>

    <ItemGroup>
      <ProjectReference Include="..\Conventional.Roslyn.Analyzers\Conventional.Roslyn.Analyzers.csproj" PrivateAssets="All" />
    </ItemGroup>

    <ItemGroup>
        <None Update="tools\*.ps1" CopyToOutputDirectory="Always" Pack="true" PackagePath="tools" />
        <None Include="$(OutputPath)\Conventional.Roslyn.Analyzers.dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
        
    </ItemGroup>

    <PropertyGroup>
        <TargetsForTfmSpecificBuildOutput> $(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage</TargetsForTfmSpecificBuildOutput>
    </PropertyGroup>

    <Target Name="CopyProjectReferencesToPackage" DependsOnTargets="BuildOnlySettings;ResolveReferences">
        <ItemGroup>
            <_ReferenceCopyLocalPaths Include="@(ReferenceCopyLocalPaths->WithMetadataValue('ReferenceSourceTarget', 'ProjectReference')->WithMetadataValue('PrivateAssets', 'All'))"/>
        </ItemGroup>

        <ItemGroup>
            <BuildOutputInPackage Include="@(_ReferenceCopyLocalPaths)" TargetPath="%(_ReferenceCopyLocalPaths.DestinationSubDirectory)"/>
        </ItemGroup>
    </Target>

</Project>
